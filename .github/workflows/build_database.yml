name: build_database

on:
  # 支持手动触发
  workflow_dispatch:
    inputs:
      repo:
        description: 'AzerothCore 仓库地址'
        required: true
        default: 'https://github.com/azerothcore/azerothcore-wotlk.git'
      branch:
        description: '要拉取的分支'
        required: true
        default: 'master'
  # 支持自动触发，这里设置为每周六凌晨 2 点触发
  schedule:
    - cron: '0 2 * * 6'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout
        uses: actions/checkout@v3

      # 安装必要的依赖
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake make gcc g++ clang libmariadb-dev-compat libmariadb-dev libssl-dev libbz2-dev libreadline-dev libncurses5-dev libboost-all-dev mysql-server gzip

      # 启动 MySQL 服务
      - name: Start MySQL
        run: |
          sudo systemctl start mysql

      # 拉取指定的 AzerothCore 仓库及分支
      - name: Clone AzerothCore
        run: |
          git clone ${{ github.event.inputs.repo || 'https://github.com/azerothcore/azerothcore-wotlk.git' }} -b ${{ github.event.inputs.branch || 'master' }} azerothcore-wotlk

      # 创建数据库并设置编码
      - name: Create databases
        run: |
          mysql -u root -e "CREATE DATABASE IF NOT EXISTS auth CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
          mysql -u root -e "CREATE DATABASE IF NOT EXISTS characters CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
          mysql -u root -e "CREATE DATABASE IF NOT EXISTS world CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
          mysql -u root -e "CREATE DATABASE IF NOT EXISTS playerbots CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"

      # 导入 SQL 文件
      - name: Import SQL files
        run: |
          mysql -u root auth < azerothcore-wotlk/sql/base/auth/auth_database.sql
          mysql -u root characters < azerothcore-wotlk/sql/base/characters/characters_database.sql
          mysql -u root world < azerothcore-wotlk/sql/base/world/world_database.sql
          mysql -u root playerbots < azerothcore-wotlk/sql/base/playerbots/playerbots_database.sql

          for file in azerothcore-wotlk/sql/updates/auth/*.sql; do
            mysql -u root auth < $file
          done

          for file in azerothcore-wotlk/sql/updates/characters/*.sql; do
            mysql -u root characters < $file
          done

          for file in azerothcore-wotlk/sql/updates/world/*.sql; do
            mysql -u root world < $file
          done

          for file in azerothcore-wotlk/sql/updates/playerbots/*.sql; do
            mysql -u root playerbots < $file
          done

      # 导出数据库并压缩
      - name: Export and compress databases
        run: |
          mysqldump -u root auth characters world playerbots > database.sql
          gzip database.sql

      # 获取当前日期
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"

      # 创建 Releases 并上传文件
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.date.outputs.date }}
          release_name: Database Backup ${{ steps.date.outputs.date }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./database.sql.gz
          asset_name: database_${{ steps.date.outputs.date }}.sql.gz
          asset_content_type: application/gzip

      # 只保留最新的 3 个 Releases
      - name: Delete old releases
        uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
