name: build_database

on:
  push:
    branches:
      - playerbot  # 可根据需要修改分支名称

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 克隆指定仓库到 c:\azerothcore 目录
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: c:\azerothcore

      # 安装 MySQL 8 数据库
      - name: Install MySQL 8
        run: |
          choco install mysql -y --version=8.0.26
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
          mysql -u root -proot -e "CREATE DATABASE IF NOT EXISTS auth; CREATE DATABASE IF NOT EXISTS characters; CREATE DATABASE IF NOT EXISTS world; CREATE DATABASE IF NOT EXISTS playerbots;"

      # 导入 base 文件夹中的文件到数据库
      - name: Import base data
        run: |
          Get-ChildItem -Path c:\azerothcore\data\base -Filter *.sql | ForEach-Object {
            mysql -u root -proot auth < $_.FullName
            mysql -u root -proot characters < $_.FullName
            mysql -u root -proot world < $_.FullName
            mysql -u root -proot playerbots < $_.FullName
          }

      # 导入 updates 文件夹中的文件到数据库
      - name: Import updates data
        run: |
          Get-ChildItem -Path c:\azerothcore\data\updates -Filter *.sql | ForEach-Object {
            mysql -u root -proot auth < $_.FullName
            mysql -u root -proot characters < $_.FullName
            mysql -u root -proot world < $_.FullName
            mysql -u root -proot playerbots < $_.FullName
          }

      # 导出数据库
      - name: Export databases
        run: |
          $date = Get-Date -Format "yyyyMMdd"
          $backupFileName = "database_$date.sql"
          mysqldump -u root -proot auth characters world playerbots > $backupFileName

      # 创建 Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_date.outputs.date }}
          release_name: Database Backup ${{ steps.get_date.outputs.date }}
          draft: false
          prerelease: false

      # 上传导出的数据库文件到 Release
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./database_${{ steps.get_date.outputs.date }}.sql
          asset_name: database_${{ steps.get_date.outputs.date }}.sql
          asset_content_type: application/sql

      # 清理旧的 Releases，仅保留最新的 3 份
      - name: Cleanup old releases
        uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
