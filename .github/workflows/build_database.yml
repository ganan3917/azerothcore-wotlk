name: build_database

on:
  # 支持手动触发
  workflow_dispatch:
  # 支持自动触发，这里设置为每周六凌晨 3 点触发
  schedule:
      - cron: '0 19 * * *'

jobs:
  build_database:
    runs-on: ubuntu-22.04
    env:
      TZ: Asia/Shanghai
      # 设置仓库
      azerothcore_url: https://github.com/ganan3917/azerothcore-wotlk.git
      # 设置分支
      azerothcore_branch: Playerbot
      DB_USER: root
      DB_PASSWORD: root
    steps:
      # 检出代码
      - name: Checkout
        uses: actions/checkout@v3

      # 拉取AzerothCore仓库及分支
      - name: Clone AzerothCore
        run: |
          set -e
          git clone -b ${{env.azerothcore_branch}} ${{env.azerothcore_url}}  azerothcore-wotlk

      # 启动 MySQL 服务
      - name: Start MySQL service
        run: sudo systemctl start mysql.service

      # 创建数据库
      - name: Create databases
        run: |
          set -e
          mysql -u $DB_USER -p$DB_PASSWORD -e "CREATE DATABASE IF NOT EXISTS auth CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
          mysql -u $DB_USER -p$DB_PASSWORD -e "CREATE DATABASE IF NOT EXISTS characters CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
          mysql -u $DB_USER -p$DB_PASSWORD -e "CREATE DATABASE IF NOT EXISTS world CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"

      # 导入基础 SQL 文件
      - name: Import base SQL files
        run: |
          set -e
          for file in azerothcore-wotlk/data/sql/base/db_auth/*.sql; do
            mysql -u $DB_USER -p$DB_PASSWORD auth < $file
          done
          for file in azerothcore-wotlk/data/sql/base/db_characters/*.sql; do
            mysql -u $DB_USER -p$DB_PASSWORD characters < $file
          done
          for file in azerothcore-wotlk/data/sql/base/db_world/*.sql; do
            mysql -u $DB_USER -p$DB_PASSWORD world < $file
          done

      # 获取当前日期
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +%Y%m%d)"

      # 导出数据库并打包，文件名包含日期
      - name: Export and compress databases
        run: |
          set -e
          mysqldump -u $DB_USER -p$DB_PASSWORD auth > auth.sql
          mysqldump -u $DB_USER -p$DB_PASSWORD characters > characters.sql
          mysqldump -u $DB_USER -p$DB_PASSWORD world > world.sql
          sudo tar -zcvf database-${{ steps.date.outputs.date }}.sql.gz auth.sql characters.sql world.sql

      # 上传打包好的数据库文件作为工作流的制品
      - name: Upload database artifact
        uses: actions/upload-artifact@v4
        with:
          name: database-backup-${{ steps.date.outputs.date }}
          path: database-${{ steps.date.outputs.date }}.sql.gz
