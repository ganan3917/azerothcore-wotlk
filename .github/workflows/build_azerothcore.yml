name: build_azerothcore

on:
  # 支持手动触发工作流，并允许指定拉取的分支
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to checkout'
        required: false
        default: playerbot
  # 支持按计划自动触发工作流，每天凌晨 3 点（UTC 时间）执行
  schedule:
    - cron: '0 3 * * *'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Create modules directory
        run: mkdir -p modules

      - name: Pull specified repository to modules directory
        run: |
          git clone https://github.com/liyunfan1223/mod-playerbots.git modules/mod-playerbots
          git clone https://github.com/azerothcore/mod-eluna.git modules/mod-eluna
          git clone https://github.com/azerothcore/mod-autobalance.git modules/mod-autobalance
          git clone https://github.com/azerothcore/mod-learn-spells.git modules/mod-learn-spells

      - name: Cache dependencies and build artifacts
        id: cache-azerothcore
        uses: actions/cache@v3
        with:
          # 指定要缓存的路径
          path: |
            # 缓存依赖安装目录
            /opt/azerothcore/deps
            # 缓存构建目录
            /opt/azerothcore/build
          key: ${{ runner.os }}-azerothcore-${{ hashFiles('CMakeLists.txt', 'deps/**') }}
          restore-keys: |
            ${{ runner.os }}-azerothcore-
      
      - name: Set up build environment
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git cmake make gcc g++ clang libssl-dev libbz2-dev libreadline-dev libncurses-dev libboost-all-dev lsb-release gnupg wget
      
      - name: Create build directory
        run: mkdir build

      - name: Configure CMake
        working-directory: build
        run: cmake ../ -DCMAKE_INSTALL_PREFIX=$HOME/azeroth-server -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DWITH_WARNINGS=1 -DTOOLS_BUILD=all -DSCRIPTS=static -DMODULES=static

      - name: Compile AzerothCore
        working-directory: build
        run: make -j $(nproc)

      - name: Install AzerothCore
        working-directory: build
        run: make install

      - name: Generate timestamped package name
        id: package_name
        run: |
          TIMESTAMP=$(date +"%Y%m%d")
          echo "package_name=azerothcore_${TIMESTAMP}.tar.gz" >> $GITHUB_OUTPUT

      - name: Package the compiled files
        run: |
          cd $HOME/azeroth-server
          tar -czvf ${{ steps.package_name.outputs.package_name }} azeroth-server

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.package_name.outputs.package_name }}
          asset_name: ${{ steps.package_name.outputs.package_name }}
          asset_content_type: application/gzip
