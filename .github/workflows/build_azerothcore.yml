name: build_azerothcore

on:
  # 手动触发，可输入仓库地址、分支和模块仓库信息
  workflow_dispatch:
  # 每天凌晨 3 点自动触发
  schedule:
    - cron: '0 19 * * *'

jobs:
  build-azerothcore-linux:
    runs-on: ubuntu-22.04
    env:
      TZ: Asia/Shanghai
      # 设置目录
      AC_DIR: azerothcore-wotlk
      # 设置仓库
      azerothcore_url: https://github.com/ganan3917/azerothcore-wotlk.git
      # 设置分支
      azerothcore_branch: Playerbot
    steps:
      # 安装编译所需的依赖组件
      - name: Install Dependencies
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y git cmake make gcc g++ clang libmysqlclient-dev libssl-dev libbz2-dev libreadline-dev libncurses-dev mysql-server libboost-all-dev
      
      # 克隆仓库
      - name: Clone Repository
        run: |
          set -e
          echo "Cloning repository ${{ env.azerothcore_url }} on branch ${{ env.azerothcore_branch }}"
          git clone ${{ env.azerothcore_url }} -b ${{ env.azerothcore_branch }} ${{ env.AC_DIR }}
          cd ${{ env.AC_DIR }}
          echo "Updating submodules"
          git submodule update --init --recursive

      # 克隆模块到 modules 目录
      - name: Clone Module Repository
        run: |
          set -e
          mkdir -p ${{ env.AC_DIR }}/modules
          cd ${{ env.AC_DIR }}/modules
          git clone https://github.com/ganan3917/mod-playerbots.git 
          git clone https://github.com/azerothcore/mod-learn-spells.git 
          git clone https://github.com/azerothcore/mod-autobalance.git 
          git clone https://github.com/azerothcore/mod-eluna.git

      # 创建构建目录
      - name: Create Build Directory
        run: |
          set -e
          mkdir -p ${{ env.AC_DIR }}/build

      # 使用 CMake 配置项目
      - name: Configure CMake
        run: |
          set -e
          cd ${{ env.AC_DIR }}/build
          cmake .. -DCMAKE_INSTALL_PREFIX=./install -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DWITH_WARNINGS=1 -DTOOLS_BUILD=all -DSCRIPTS=static -DMODULES=static

      # 编译项目
      - name: Compile Project
        run: |
          set -e
          cd ${{ env.AC_DIR }}/build
          make -j 4
          make install
          
      # 获取当前日期
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +%Y%m%d)"
        
      # 打包编译后的文件，修改文件名
      - name: Package Compiled Files
        run: |
          set -e
          cd ${{ env.AC_DIR }}/build/install
          sudo tar -czvf /azerothcore-${{ steps.date.outputs.date }}.tar.gz .

      # 上传编译好的文件作为 artifact
      - name: Upload Compiled Files as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: azerothcore-${{ steps.date.outputs.date }}
          path: /azerothcore-${{ steps.date.outputs.date }}.tar.gz
