name: build_azerothcore

on:
  # 支持手动触发工作流，并允许指定拉取的分支
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to checkout'
        required: false
        default: playerbots



jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            g++ \
            gcc \
            make \
            clang \
            libmysqlclient-dev \
            libssl-dev \
            libbz2-dev \
            libreadline-dev \
            libncurses-dev \
            libboost-all-dev \
            mysql-server
      - name: Configure CMake
        run: |
          mkdir build
          mkdir bin
          cd build
          cmake ../ -DCMAKE_INSTALL_PREFIX=./bin/ -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DWITH_WARNINGS=1 -DTOOLS_BUILD=all -DSCRIPTS=static -DMODULES=static
      - name: Build AzerothCore
        run: |
          cd build
          make -j$(nproc)
      - name: Compress the build
        run: |
          cd build/bin
          gzip -r ./*.exe
          gzip -r ./*.dll
      - name: Create Release
        id: create_release
        uses: softprops/action-github-release@v1
        with:
          tag_name: ${{ github.sha }}
          release_name: AzerothCore - WoTLK - ${{ format('{0:yyyy - MM - dd}', github.sha) }}
          body: Compiled AzerothCore - WoTLK build.
          draft: false
          prerelease: false
      - name: Upload artifacts
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/bin/*.gz
          asset_name: AzerothCore - WoTLK - ${{ format('{0:yyyy - MM - dd}', github.sha) }}.gz
          asset_content_type: application/gzip
      - name: Clean up old releases
        uses: actions-helper/delete-releases@v12
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          keep_latest: 3
